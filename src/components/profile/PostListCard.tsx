import { PostlistItem } from '@/models/postlistResponse';
import { useState } from 'react';
import { FaPlay } from 'react-icons/fa';
import AboutAccountModal from '../modal/AboutAccountModal';
import ReportModal from '../modal/ReportModal';
import SafeImage from '../shared/SafeImage';

interface PostListCardProps {
    coverfile: string;
    isVideo: number;
    index: number;
    activeTab: string;
    postTitle: string;
    post?: PostlistItem;
    updateTabData?: () => void
}
const PostListCard = ({ coverfile, isVideo, index, activeTab, postTitle, post, updateTabData }: PostListCardProps) => {
    const [isReportModalOpen, setIsReportModalOpen] = useState<number | null>(null);
    const [isAboutAccountModalOpen, setIsAboutAccountModalOpen] = useState<number | null>(null);
    return (
        <div>
            <button
                className={`relative hover:cursor-pointer w-full block ${activeTab === 'Mini' ? 'aspect-video' : activeTab === 'Snips' ? 'aspect-[9/16]' : 'aspect-square'} rounded-md overflow-hidden`}
            >
                <div className="w-full h-full relative">
                    <SafeImage
                        onContextMenu={(e) => e.preventDefault()}
                        src={coverfile}
                        alt={`post-${index}`}
                        className="w-full h-full object-cover rounded-md"
                    />
                </div>

                {activeTab !== 'Mini' ? (
                    <div className="absolute top-2 right-2">
                        {isVideo === 1 ? (
                            <FaPlay className="text-2xl text-white" />
                        ) : (post?.videoFile?.length! > 1) && (
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 115 125" >
                                <path d="M0 0 C29.04 0 58.08 0 88 0 C88.061875 7.30125 88.12375 14.6025 88.1875 22.125 C88.22846802 25.56703857 88.22846802 25.56703857 88.27026367 29.07861328 C88.27903027 30.90917434 88.2866738 32.73974127 88.29296875 34.5703125 C88.3159906 35.98171509 88.3159906 35.98171509 88.33947754 37.42163086 C88.3419291 43.59465492 87.6472447 48.06419308 83.3515625 52.828125 C82.78179687 53.29734375 82.21203125 53.7665625 81.625 54.25 C80.77808594 54.96929687 80.77808594 54.96929687 79.9140625 55.703125 C75.81368513 58.48133987 72.14116573 59.25294254 67.23510742 59.29052734 C65.53260078 59.3096669 65.53260078 59.3096669 63.79570007 59.32919312 C61.96903557 59.33253159 61.96903557 59.33253159 60.10546875 59.3359375 C58.21348503 59.3459227 58.21348503 59.3459227 56.28327942 59.35610962 C53.61603674 59.36622948 50.94920175 59.37179288 48.28198242 59.37060547 C44.88256678 59.37040261 41.48399026 59.39767879 38.08477306 59.43214989 C34.82087072 59.45988616 31.55697284 59.45857135 28.29296875 59.4609375 C26.47541328 59.48249405 26.47541328 59.48249405 24.62113953 59.50448608 C16.68280169 59.46180516 11.07805357 58.59828256 4.94140625 53.18359375 C4.25884766 52.31927734 4.25884766 52.31927734 3.5625 51.4375 C3.08941406 50.85871094 2.61632812 50.27992187 2.12890625 49.68359375 C0.10720143 46.66852531 -0.12338017 44.0467194 -0.11352539 40.52856445 C-0.11340454 39.61530396 -0.11328369 38.70204346 -0.11315918 37.7611084 C-0.10804321 36.80482544 -0.10292725 35.84854248 -0.09765625 34.86328125 C-0.09664917 33.98168335 -0.09564209 33.10008545 -0.09460449 32.19177246 C-0.08937263 28.89866841 -0.07541136 25.6055829 -0.0625 22.3125 C-0.041875 14.949375 -0.02125 7.58625 0 0 Z " fill="#fff" transform="translate(28,36)" />
                                <path d="M0 0 C1.35849524 -0.00778893 2.71698568 -0.01646133 4.07546997 -0.02597046 C6.91489487 -0.04083965 9.75382221 -0.0403541 12.59326172 -0.02978516 C16.2104472 -0.01820789 19.82558021 -0.05204564 23.44242668 -0.0984745 C26.24630391 -0.12811624 29.04969635 -0.12967049 31.85370255 -0.12345505 C33.82833144 -0.12496433 35.80288572 -0.15257547 37.77731323 -0.18081665 C45.71525515 -0.09962905 51.21429369 0.9936704 57.0703125 6.6015625 C59.5465272 9.78664375 61.0703125 12.46650084 61.0703125 16.6015625 C32.0303125 16.6015625 2.9903125 16.6015625 -26.9296875 16.6015625 C-25.78140205 10.86013525 -25.78140205 10.86013525 -23.8046875 8.0390625 C-23.43085938 7.48089844 -23.05703125 6.92273438 -22.671875 6.34765625 C-15.98269924 -0.35651766 -9.01843225 -0.01272549 0 0 Z " fill="#fff" transform="translate(54.9296875,11.3984375)" />
                                <path d="M0 0 C0.33 0 0.66 0 1 0 C1.01981934 0.91177002 1.03963867 1.82354004 1.06005859 2.76293945 C1.13890694 6.19806994 1.22561763 9.63282623 1.31738281 13.06762695 C1.35528686 14.54443929 1.39020113 16.02133192 1.421875 17.49829102 C1.37617474 36.14738231 1.37617474 36.14738231 10 52 C15.3771546 55.97223707 20.59371746 59.06921496 27.37963867 59.20532227 C28.26032516 59.22526749 29.14101166 59.24521271 30.04838562 59.26576233 C30.99534805 59.28247482 31.94231049 59.29918732 32.91796875 59.31640625 C34.37654045 59.3475779 34.37654045 59.3475779 35.86457825 59.37937927 C38.97214665 59.44478748 42.07979985 59.50371929 45.1875 59.5625 C47.29362858 59.60569351 49.39974856 59.64930807 51.50585938 59.69335938 C56.67048591 59.80045999 61.83519778 59.90175219 67 60 C65.18172087 64.14985236 62.90392135 65.68951593 59 68 C56.15741194 68.94752935 54.33170113 69.14165084 51.38012695 69.17700195 C50.44517899 69.18983719 49.51023102 69.20267242 48.54695129 69.21589661 C47.53759018 69.22328354 46.52822906 69.23067047 45.48828125 69.23828125 C43.92499336 69.25038887 43.92499336 69.25038887 42.3301239 69.26274109 C40.12187359 69.27657754 37.91360192 69.28730166 35.70532227 69.29516602 C32.3428439 69.31234497 28.98135746 69.35623208 25.61914062 69.40039062 C23.47136138 69.41052086 21.32357379 69.41903592 19.17578125 69.42578125 C17.67692131 69.45204338 17.67692131 69.45204338 16.14778137 69.47883606 C8.8854969 69.4564882 3.45759308 68.05081742 -2.05859375 63.18359375 C-2.74115234 62.31927734 -2.74115234 62.31927734 -3.4375 61.4375 C-3.91058594 60.85871094 -4.38367188 60.27992187 -4.87109375 59.68359375 C-6.8489264 56.73395406 -7.13519589 54.10259358 -7.19287109 50.65551758 C-7.20893402 49.78063187 -7.22499695 48.90574615 -7.24154663 48.00434875 C-7.28621625 43.99859545 -7.32707677 39.99300508 -7.35009766 35.98706055 C-7.36662988 33.87952613 -7.39388358 31.77204715 -7.43212891 29.66479492 C-7.48713828 26.61607969 -7.50881029 23.5686772 -7.5234375 20.51953125 C-7.54610687 19.58591263 -7.56877625 18.65229401 -7.59213257 17.69038391 C-7.56812861 10.18906062 -5.29671911 5.29671911 0 0 Z " fill="#fff" transform="translate(19,42)" />
                            </svg>
                        )}
                    </div>
                )
                    : (
                        postTitle.length > 0 &&
                        <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black to-transparent text-primary-text-color p-2 rounded-b-md">
                            <div className='flex min-w-0'>
                                <p className="font-semibold truncate text-white">
                                    {postTitle}
                                </p>
                            </div>
                        </div>
                    )}
                {post?.isInteractive === "1" && (
                    <div className="absolute top-2 left-2 z-10  text-primary-text-color">
                        <div className="bg-black/35 backdrop-blur-sm rounded-md px-2 py-1 flex items-center justify-center">
                            <span className=" text-transparent bg-clip-text text-base font-bold bg-gradient-to-r from-purple-400 via-pink-500 to-indigo-500">
                                {'{I}'}
                            </span>
                        </div>
                    </div>
                )}

            </button>
            {isReportModalOpen && <ReportModal postId={isReportModalOpen} onClose={() => { setIsReportModalOpen(null) }} />}
            {isAboutAccountModalOpen && <AboutAccountModal userId={isAboutAccountModalOpen} onClose={() => { setIsAboutAccountModalOpen(null) }} />}
        </div>
    )
}

export default PostListCard